from aiogram import Router, types, F
from aiogram.filters import Command
from config import ADMINS
from database import get_pending_voices, approve_voice, delete_voice_by_file_id

router = Router()

@router.message(Command("moderate"))
async def show_pending(message: types.Message):
    if message.from_user.id not in ADMINS:
        await message.answer("‚õî –£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return

    pending = await get_pending_voices()
    if not pending:
        await message.answer("–ù–µ—Ç –Ω–æ–≤—ã—Ö –º–µ–º–æ–≤ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.")
        return

    for voice_id, keyword, file_id in pending:
        buttons = types.InlineKeyboardMarkup(inline_keyboard=[
            [
                types.InlineKeyboardButton(
                    text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å",
                    callback_data=f"approve:{keyword}:{file_id}"
                ),
                types.InlineKeyboardButton(
                    text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å",
                    callback_data="reject"
                )
            ]
        ])

        await message.bot.send_voice(
            chat_id=message.chat.id,
            voice=file_id,
            caption=f"üÜï –ú–µ–º –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏\n–ö–ª—é—á: <b>{keyword}</b>",
            reply_markup=buttons,
            parse_mode="HTML"
        )

@router.callback_query(F.data.startswith("approve:"))
async def approve_callback(callback: types.CallbackQuery):
    if callback.from_user.id not in ADMINS:
        await callback.answer("‚õî –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ", show_alert=True)
        return

    _, keyword, file_id = callback.data.split(":", 2)
    pending = await get_pending_voices()
    voice_id = next((vid for vid, kw, fid in pending if fid == file_id and kw == keyword), None)

    if voice_id is None:
        await callback.answer("‚ùó –ú–µ–º —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    await approve_voice(voice_id)
    await callback.message.edit_caption(
        f"‚úÖ –ú–µ–º –æ–¥–æ–±—Ä–µ–Ω!\n–ö–ª—é—á: <b>{keyword}</b>",
        parse_mode="HTML"
    )
    await callback.answer("‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ!")

@router.callback_query(F.data == "reject")
async def reject_callback(callback: types.CallbackQuery):
    if callback.from_user.id not in ADMINS:
        await callback.answer("‚õî –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ", show_alert=True)
        return

    file_id = callback.message.voice.file_id
    await delete_voice_by_file_id(file_id)

    await callback.message.edit_caption("‚ùå –ú–µ–º –æ—Ç–∫–ª–æ–Ω—ë–Ω –∏ —É–¥–∞–ª—ë–Ω –∏–∑ –±–∞–∑—ã")
    await callback.answer("üóë –£–¥–∞–ª–µ–Ω–æ.")

